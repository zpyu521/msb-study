<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zpyu.springboot.dao.RoleDao">
	<resultMap id="BaseResultMap"
		type="com.zpyu.springboot.entity.Role">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, `name`
	</sql>
	<select id="selectByExample"
		parameterType="com.zpyu.springboot.dao.RoleExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.zpyu.springboot.dao.RoleExample">
		delete from role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" keyColumn="id" keyProperty="id"
		parameterType="com.zpyu.springboot.entity.Role"
		useGeneratedKeys="true">
		insert into role (`name`)
		values
		(#{name,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" keyColumn="id" keyProperty="id"
		parameterType="com.zpyu.springboot.entity.Role"
		useGeneratedKeys="true">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				`name`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.zpyu.springboot.dao.RoleExample"
		resultType="java.lang.Long">
		select count(*) from role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update role
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				`name` = #{record.name,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update role
		set id = #{record.id,jdbcType=INTEGER},
		`name` =
		#{record.name,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.zpyu.springboot.entity.Role">
		update role
		<set>
			<if test="name != null">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.zpyu.springboot.entity.Role">
		update role
		set `name` = #{name,jdbcType=VARCHAR}
		where id
		= #{id,jdbcType=INTEGER}
	</update>

	<resultMap type="Role" id="rolePmsMap">

		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />

		<collection property="permissionList" ofType="Permission">
			<id column="pid" jdbcType="INTEGER" property="id" />
			<result column="uri" jdbcType="VARCHAR" property="uri" />
			<result column="pname" jdbcType="VARCHAR" property="name" />
			<result column="c" jdbcType="BIT" property="c" />
			<result column="r" jdbcType="BIT" property="r" />
			<result column="u" jdbcType="BIT" property="u" />
			<result column="d" jdbcType="BIT" property="d" />
		</collection>
	</resultMap>

	<select id="selectRolePmsList" resultMap="rolePmsMap">
		SELECT
		r.id,
		r.name,
		p.id
		as pid,
		p.c,
		p.d,
		p.`name` as pname,
		p.r,
		p.u,
		p.uri
		FROM
		role r
		LEFT JOIN
		role_permission rp on r.id = rp.role_id
		LEFT JOIN permission p on
		rp.permission_id = p.id
	</select>

	<insert id="saveRolePermission" keyColumn="id"
		useGeneratedKeys="true">
		delete from role_permission where role_id = #{id};
		insert into role_permission (role_id,permission_id) values
		<foreach collection="permissionList" item="permission"
			 separator=",">
			(#{id},#{permission.id})
		</foreach>
	</insert>

</mapper>